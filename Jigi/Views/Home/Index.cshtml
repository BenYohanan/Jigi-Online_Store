@model IEnumerable<Jigi.Models.Product>


@{
    ViewData["Title"] = "Home";
}


<div id="themeSlider" class="carousel slide" data-ride="carousel">

    <ol class="carousel-indicators">
        <li data-target="#themeSlider" data-slide-to="0" class="active"></li>
        <li data-target="#themeSlider" data-slide-to="1"></li>
        <li data-target="#themeSlider" data-slide-to="2"></li>
    </ol>

    <div class="carousel-inner">
        <div class="carousel-item active">
            <div class="imgOverlay"></div>
            <img style="height:550px; width:100%" src="~/Image/Lp14.jpg" alt="First slide">
            <div class="carousel-caption">
                <h3>New</h3>
            </div>
        </div>

        <div class="carousel-item">
            <div class="imgOverlay"></div>
            <img style="height:550px; width:100%" src="~/Image/Lp8.jpg" alt="Second slide">
            <div class="carousel-caption">
                <h3>PHONES</h3>
            </div>
        </div>

        <div class="carousel-item">
            <div class="imgOverlay"></div>
            <img style="height:550px; width:100%" src="~/Image/Lp12.jpg" alt="Third slide">
            <div class="carousel-caption">
                <h3>LAPTOPS</h3>
            </div>
        </div>
    </div>

    <a class="left carousel-control" href="#themeSlider" data-slide="prev">
        <span class="fa fa-chevron-left"></span>
    </a>
    <a class="right carousel-control" href="#themeSlider" data-slide="next">
        <span class="fa fa-chevron-right"></span>
    </a>
</div>

<div class="col-md-5 col-xs-6 col-lg-5 float-right pt-2 pb-2">
    <form asp-controller="User" asp-action="SearchProduct" method="get">
        <div class="input-group">
            <input class="form-control" type="text" placeholder="Search for..." />
            <button class="btn btn-dark" type="submit"><i class="fas fa-search"></i></button>
        </div>
    </form>
</div>


<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-6">
        <div class="page-header">
            <h2><b><small><i>Trends Products</i></small></b></h2>
        </div>
    </div>
</div>

<div class="container-fluid row product-container">
    @foreach (var product in Model)
    {
        <div class="col-md-3 col-sm-3 col-xs-6" style="margin-bottom:8px">
            <div class="img-thumbnail product-item" style="height:500px">
                <img class="img-responsive" title="Click to view product detail" style="cursor:pointer; display:block; height:340px; max-width:100%" src="@product.Image" />
                <div class="caption">
                    <h5>@product.ProductName</h5>
                    <div class="container-fluid">
                        <p>&#8358; @product.Price</p>
                        <button type="submit" onclick="AddToCart('@product.Id', '@product.ProductName')" class="fa-pull-right"><i class="fa fa-shopping-cart"></i></button>
                        <span id="product" class="counter counter-lg vis"></span>
                    </div>

                    <p style="font-size:15px">@product.Description</p>
                    <p>

                    </p>
                    <div class="product-item-badge">
                        @if (product.IsFeatured == true)
                        {
                            <p>New</p>
                        }
                        else
                        {
                            <p>Old</p>
                        }
                    </div>
                </div>

            </div>
        </div>
    }
</div>


<script>
    function AddToCart(productId, productName) {

        //Declared 2 arrays, the first saves the values we get by clicking on -add to cart buuton-
        //The second array saves the value of the first array as a single array, by using the .push method
        var listToSave = [];
        var listOfProducts = {};
        listOfProducts.id = productId;
        listOfProducts.name = productName;

        var cartCount = 0;

        //The valus are collected using the .get method and saved to "the storage, with storage name -myCart-"
        var cart = sessionStorage.getItem("myCart");

        //A check for empty cart is made
        if (cart == null) {

            // Check browser support
            if (typeof (Storage) !== "undefined") {
                listToSave.push(JSON.stringify(listOfProducts));
                // The array is set to  myCart and converted to string then returned to "listToSave" array
                sessionStorage.setItem("myCart", JSON.stringify(listToSave));

                //The below storage will be use to save and increment the cart onced clicked by the user
                var newCart = sessionStorage.getItem("myCart");

                //The function is called
                // allProductInCart(newCart);
                cartCount = 1;
                $("#cartResult").text(cartCount);

            } else {
                errorAlert("Sorry, your browser does not support Web Storage...");
            }
        }
        else {
            if (typeof (Storage) !== "undefined") {

                // UPDATING THE CART, AND IT HOLDS AN ITEM ALREADY. STORAGE ACCEPT STRING, AND IF A NEW STRING
                // IS CALLED IT OVERRIDES THE FIRST. SO WE NEED TO declare a variable and parse "previousCart"
                // to it before updating the "backToArray" variable. Finally we convert back to string and save
                //back to "myCart"
                var backToArray = JSON.parse(cart);
                backToArray.push(listOfProducts);
                sessionStorage.myCart = JSON.stringify(backToArray);
                getCartCount(backToArray);


            } else {
                errorAlert("Sorry, your browser does not support Web Storage...");
            }
        }

        //This function will implement the count for the user to see
        function getCartCount(backToArray) {
            var lengthOfArray = backToArray.length;
            $("#cartResult").text(lengthOfArray);
        }
    }
</script>